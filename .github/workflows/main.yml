# name: Linting, testing and building
# on:
#   push:
#     branches:
#       - master
#     paths-ignore:
#       - ".github/**"
#       - ".vscode/**"
#   pull_request:
#     branches:
#       - master
#     paths-ignore:
#       - ".github/**"
#       - ".vscode/**"
# jobs:
#   init-host:
#     name: 1. Load project & Linting
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 17.4.0
#       - name: Cache Start
#         id: cache-npm
#         uses: actions/cache@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install node modules
#         run: npm ci

#       - name: Linting typescript
#         if: always()
#         run: npm run lint:ts
#       - name: CSS linter
#         if: always()
#         run: npm run lint:scss

#   unit-test:
#     name: 2.2 Unit testing
#     needs: init-host
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 17.4.0
#       - name: Cache Restore
#         id: cache-npm
#         uses: actions/cache/restore@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#           fail-on-cache-miss: true
#       - name: unit testing
#         run: npm run test:unit

#   screens:
#     name: 2.3 Screenshots testing project
#     needs: init-host
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 17.4.0
#       - name: Cache Restore
#         id: cache-npm
#         uses: actions/cache/restore@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#           fail-on-cache-miss: true
#       - name: build storybook
#         if: always()
#         run: npm run storybook:build
#       - name: Screenshot testing
#         if: always()
#         id: screenshots
#         run: npm run test:ui:ci
#       - name: Uploade fail screenshots
#         if: ${{ failure() && steps.screenshots.conclusion == 'failure'}}
#         uses: actions/upload-artifact@v3
#         with:
#           path: ".loki/difference"
#           name: loki-fail-difference
          
#   build:
#     name: 3. Build production
#     needs:
#       - unit-test
#       - screens
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 17.4.0
#       - name: Cache Restore
#         id: cache-npm
#         uses: actions/cache/restore@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#           fail-on-cache-miss: true
#       - name: build production project
#         run: npm run build:prod

name: linting, testing, building
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: build storybook
        run: npm run storybook:build
        if: always()
      - name: screenshot testing
        run: npm run test:ui:ci
        if: always()
      - name: unit testing
        if: always()
        run: npm run test:unit
      - name: Generate HTML report
        run: npm run test:ui:report
        if: always()
      - name: move loki
        run: mv .loki reports/
        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v2
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: 'reports'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: linting typescript
        run: npm run lint:ts
        if: always()
      - name: linting css
        run: npm run lint:scss

